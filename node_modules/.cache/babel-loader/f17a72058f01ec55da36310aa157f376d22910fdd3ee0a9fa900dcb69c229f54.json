{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport LineChart from '../components/Chart';\nimport axios from 'axios';\nimport { Fragment as _Fragment, jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Stocks = () => {\n  _s();\n  const [chartData, setChartData] = React.useState(null);\n  const [summary, setSummary] = React.useState(null);\n  const [flag, setFlag] = React.useState(false);\n  const apiKey = process.env.REACT_API_API_KEY;\n  useEffect(() => {\n    const fetchTrend = async () => {\n      try {\n        const options = {\n          method: 'GET',\n          url: `https://yfapi.net/v8/finance/chart/${state}?range=1mo&inteval=1d`,\n          headers: {\n            'x-api-key': apiKey\n          }\n        };\n        const response = (await axios.request) * options;\n        setChartData({\n          labels: response.data.chart.result[0].timestamp.map(elem => new Date(elem * 1000).toLocaleDateString(\"en-US\")),\n          datasets: [{\n            label: 'Changes Reflected Daily',\n            data: response.data.chart.result[0].indicators.quote[0].close,\n            backgroundColor: ['rgba(75,192,192,1)', 'rgba(54, 162, 235, 0.2)', 'rgba(255, 206, 86, 0.2)', 'rgba(75, 192, 192, 0.2)', 'rgba(153, 102, 255, 0.2)', 'rgba(255, 159, 64, 0.2)'],\n            borderWidth: 5\n          }]\n        });\n        setSummary(response.data.chart.result[0].meta);\n        setFlag(response.data.chart.result);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n    fetchTrend();\n  }, [apiKey, state]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: \"Stock Details Page\"\n  }, void 0, false);\n};\n_s(Stocks, \"xiv5HZv8nDWdCehjrTu3XXm/6Gc=\");\n_c = Stocks;\nexport default Stocks;\nvar _c;\n$RefreshReg$(_c, \"Stocks\");","map":{"version":3,"names":["React","useEffect","useLocation","LineChart","axios","Fragment","_Fragment","jsxDEV","_jsxDEV","Stocks","_s","chartData","setChartData","useState","summary","setSummary","flag","setFlag","apiKey","process","env","REACT_API_API_KEY","fetchTrend","options","method","url","state","headers","response","request","labels","data","chart","result","timestamp","map","elem","Date","toLocaleDateString","datasets","label","indicators","quote","close","backgroundColor","borderWidth","meta","error","console","children","_c","$RefreshReg$"],"sources":["/home/mitchell/Desktop/WEB-DVPT/stock-app/src/pages/Stocks.js"],"sourcesContent":["import React, { useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport LineChart from '../components/Chart';\nimport axios from 'axios';\n\nconst Stocks = () => {   \n    const [chartData, setChartData] = React.useState(null);\n    const [summary, setSummary] = React.useState(null);\n    const[flag, setFlag] = React.useState(false);\n    const apiKey = process.env.REACT_API_API_KEY;\n\n    useEffect(() => {\n        const fetchTrend = async () => {\n            try{\n                const options = {\n                    method: 'GET',\n                    url: `https://yfapi.net/v8/finance/chart/${state}?range=1mo&inteval=1d`,\n                    headers: {\n                        'x-api-key': apiKey\n                    }\n                    };\n                    const response = await axios.request*(options);\n                    setChartData({\n                        labels: response.data.chart.result[0].timestamp.map((elem) => new Date (elem*1000).toLocaleDateString(\"en-US\")),\n                            datasets: [\n                            {\n                                label: 'Changes Reflected Daily',\n                                data: response.data.chart.result[0].indicators.quote[0].close,\n                                backgroundColor: [\n                                                'rgba(75,192,192,1)',\n                                                 'rgba(54, 162, 235, 0.2)',\n                                                 'rgba(255, 206, 86, 0.2)',\n                                                 'rgba(75, 192, 192, 0.2)',\n                                                 'rgba(153, 102, 255, 0.2)',\n                                                 'rgba(255, 159, 64, 0.2)'\n                                ],\n                                borderWidth: 5\n                            }\n                        ],\n                    });\n                    setSummary(response.data.chart.result[0].meta);\n                    setFlag(response.data.chart.result);\n                } catch (error){\n                    console.error(error);\n                }\n            }\n            fetchTrend();\n        }, [apiKey, state])\n            \n    return (\n        <>\n            Stock Details Page\n        </>\n    )\n}\n\nexport default Stocks;"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,SAAS,MAAM,qBAAqB;AAC3C,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,QAAA,IAAAC,SAAA,EAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,MAAM,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGZ,KAAK,CAACa,QAAQ,CAAC,IAAI,CAAC;EACtD,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGf,KAAK,CAACa,QAAQ,CAAC,IAAI,CAAC;EAClD,MAAK,CAACG,IAAI,EAAEC,OAAO,CAAC,GAAGjB,KAAK,CAACa,QAAQ,CAAC,KAAK,CAAC;EAC5C,MAAMK,MAAM,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB;EAE5CpB,SAAS,CAAC,MAAM;IACZ,MAAMqB,UAAU,GAAG,MAAAA,CAAA,KAAY;MAC3B,IAAG;QACC,MAAMC,OAAO,GAAG;UACZC,MAAM,EAAE,KAAK;UACbC,GAAG,EAAE,sCAAsCC,KAAK,uBAAuB;UACvEC,OAAO,EAAE;YACL,WAAW,EAAET;UACjB;QACA,CAAC;QACD,MAAMU,QAAQ,GAAG,OAAMxB,KAAK,CAACyB,OAAO,IAAEN,OAAQ;QAC9CX,YAAY,CAAC;UACTkB,MAAM,EAAEF,QAAQ,CAACG,IAAI,CAACC,KAAK,CAACC,MAAM,CAAC,CAAC,CAAC,CAACC,SAAS,CAACC,GAAG,CAAEC,IAAI,IAAK,IAAIC,IAAI,CAAED,IAAI,GAAC,IAAI,CAAC,CAACE,kBAAkB,CAAC,OAAO,CAAC,CAAC;UAC3GC,QAAQ,EAAE,CACV;YACIC,KAAK,EAAE,yBAAyB;YAChCT,IAAI,EAAEH,QAAQ,CAACG,IAAI,CAACC,KAAK,CAACC,MAAM,CAAC,CAAC,CAAC,CAACQ,UAAU,CAACC,KAAK,CAAC,CAAC,CAAC,CAACC,KAAK;YAC7DC,eAAe,EAAE,CACD,oBAAoB,EACnB,yBAAyB,EACzB,yBAAyB,EACzB,yBAAyB,EACzB,0BAA0B,EAC1B,yBAAyB,CACzC;YACDC,WAAW,EAAE;UACjB,CAAC;QAET,CAAC,CAAC;QACF9B,UAAU,CAACa,QAAQ,CAACG,IAAI,CAACC,KAAK,CAACC,MAAM,CAAC,CAAC,CAAC,CAACa,IAAI,CAAC;QAC9C7B,OAAO,CAACW,QAAQ,CAACG,IAAI,CAACC,KAAK,CAACC,MAAM,CAAC;MACvC,CAAC,CAAC,OAAOc,KAAK,EAAC;QACXC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;MACxB;IACJ,CAAC;IACDzB,UAAU,CAAC,CAAC;EAChB,CAAC,EAAE,CAACJ,MAAM,EAAEQ,KAAK,CAAC,CAAC;EAEvB,oBACIlB,OAAA,CAAAF,SAAA;IAAA2C,QAAA,EAAE;EAEF,gBAAE,CAAC;AAEX,CAAC;AAAAvC,EAAA,CAjDKD,MAAM;AAAAyC,EAAA,GAANzC,MAAM;AAmDZ,eAAeA,MAAM;AAAC,IAAAyC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}